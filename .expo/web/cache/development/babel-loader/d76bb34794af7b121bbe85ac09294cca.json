{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/bryanmarin/Desktop/Traffic-Stop-App/trafficstop/src/navigation/AuthenticationNavigator.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingPage from \"../screens/LandingPage\";\nimport Register from \"../screens/Registration\";\nimport LogIn from \"../screens/LogIn\";\nimport ForgotPassword from \"../screens/ForgotPassword\";\nimport NewPassword from \"../screens/NewPassword\";\nimport ConfirmationCode from \"../screens/ConfirmationCode\";\nimport colors from \"../styles/colors\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport styles from \"../screens/styles/AuthenticationBoilerplate\";\n\nvar AuthenticationNavigator = function (_React$Component) {\n  _inherits(AuthenticationNavigator, _React$Component);\n\n  var _super = _createSuper(AuthenticationNavigator);\n\n  function AuthenticationNavigator() {\n    _classCallCheck(this, AuthenticationNavigator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthenticationNavigator, [{\n    key: \"render\",\n    value: function render() {\n      var Stack = createStackNavigator();\n      return React.createElement(Stack.Navigator, {\n        initialRouteName: \"LandingPage\",\n        screenOptions: {\n          title: \"\",\n          headerStyle: {\n            backgroundColor: colors.background,\n            shadowColor: 'transparent'\n          },\n          headerTintColor: '#ffffff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"LandingPage\",\n        component: LandingPage,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            headerTitle: \"\",\n            headerRight: function headerRight() {\n              return React.createElement(Button, {\n                style: styles.forgotPassword,\n                onPress: function onPress() {\n                  return navigation.navigate(\"ForgotPassword\");\n                },\n                title: \"Forgot Password\",\n                color: colors.white,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 27\n                }\n              });\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Register\",\n        component: Register,\n        options: function options(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            headerTitle: \"\",\n            headerRight: function headerRight() {\n              return React.createElement(Button, {\n                style: styles.forgotPassword,\n                onPress: function onPress() {\n                  return navigation.navigate(\"ForgotPassword\");\n                },\n                title: \"Forgot Password\",\n                color: colors.white,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 31\n                }\n              });\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"LogIn\",\n        component: LogIn,\n        options: function options(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            headerTitle: \"\",\n            headerRight: function headerRight() {\n              return React.createElement(Button, {\n                style: styles.forgotPassword,\n                onPress: function onPress() {\n                  return navigation.navigate(\"ForgotPassword\");\n                },\n                title: \"Forgot Password\",\n                color: colors.white,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 31\n                }\n              });\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ForgotPassword\",\n        component: ForgotPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NewPassword\",\n        component: NewPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ConfirmationCode\",\n        component: ConfirmationCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return AuthenticationNavigator;\n}(React.Component);\n\nexport { AuthenticationNavigator as default };\n;","map":{"version":3,"sources":["/Users/bryanmarin/Desktop/Traffic-Stop-App/trafficstop/src/navigation/AuthenticationNavigator.js"],"names":["React","createStackNavigator","LandingPage","Register","LogIn","ForgotPassword","NewPassword","ConfirmationCode","colors","TouchableOpacity","styles","AuthenticationNavigator","Stack","title","headerStyle","backgroundColor","background","shadowColor","headerTintColor","navigation","headerTitle","headerRight","forgotPassword","navigate","white","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createStackNavigator }  from '@react-navigation/stack';\nimport LandingPage from '../screens/LandingPage';\nimport Register from '../screens/Registration';\nimport LogIn from '../screens/LogIn';\nimport ForgotPassword from '../screens/ForgotPassword';\nimport NewPassword from '../screens/NewPassword';\nimport ConfirmationCode from '../screens/ConfirmationCode'\nimport colors from '../styles/colors'\nimport { Button } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport styles from '../screens/styles/AuthenticationBoilerplate';\n\n\nexport default class AuthenticationNavigator extends React.Component{\n\n    render(){\n        const Stack = createStackNavigator();\n        return (\n            <Stack.Navigator\n                initialRouteName=\"LandingPage\"\n                screenOptions= {{\n                    title: \"\",\n                    headerStyle: { backgroundColor: colors.background, \n                                   shadowColor: 'transparent',},\n                    headerTintColor: '#ffffff',\n                }}\n            >\n                <Stack.Screen \n                    name=\"LandingPage\"     \n                    component={LandingPage} \n                    options={({ navigation }) => ({\n                        headerTitle: \"\",\n                        headerRight: () => (\n                          <Button\n                            style = {styles.forgotPassword}\n                            onPress={() => navigation.navigate(\"ForgotPassword\")}\n                            title=\"Forgot Password\"\n                            color= {colors.white}\n                          />\n                        ),\n                      })}/>\n                <Stack.Screen \n                        name=\"Register\"     \n                        component={Register}\n                        options={({ navigation }) => ({\n                            headerTitle: \"\",\n                            headerRight: () => (\n                              <Button\n                                style = {styles.forgotPassword}\n                                onPress={() => navigation.navigate(\"ForgotPassword\")}\n                                title=\"Forgot Password\"\n                                color= {colors.white}\n                              />\n                            ),\n                          })}/>\n                <Stack.Screen \n                        name=\"LogIn\"   \n                        component={LogIn} \n                        options={({ navigation }) => ({\n                            headerTitle: \"\",\n                            headerRight: () => (\n                              <Button\n                                style = {styles.forgotPassword}\n                                onPress={() => navigation.navigate(\"ForgotPassword\")}\n                                title=\"Forgot Password\"\n                                color= {colors.white}\n                              />\n                            ),\n                          })}/>\n                <Stack.Screen \n                    name=\"ForgotPassword\"     \n                    component={ForgotPassword} \n                />\n                <Stack.Screen \n                    name=\"NewPassword\"     \n                    component={NewPassword} \n                />\n                <Stack.Screen \n                    name=\"ConfirmationCode\"     \n                    component={ConfirmationCode} \n                />\n            </Stack.Navigator>\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}