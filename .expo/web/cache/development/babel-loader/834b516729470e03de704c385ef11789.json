{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/bryanmarin/Desktop/Traffic-Stop-App/trafficstop/src/screens/Registration.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport colors from \"../styles/colors\";\nimport RoundedButton from \"../common-components/RoundedButton\";\nimport getTheme from \"../../native-base-theme/components\";\nimport custom from \"../../native-base-theme/variables/platform\";\nimport styles from \"./styles/Registration\";\nimport baseStyles from \"./styles/AuthenticationBoilerplate\";\nimport { FontAwesome as Icon } from '@expo/vector-icons';\nimport { Item, Form, Label, Input, Container, Text, View, StyleProvider } from 'native-base';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { connectStyle } from 'native-base';\nimport InputField from \"../common-components/InputField\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as ActionCreators from \"../redux/actions\";\nimport { Auth } from 'aws-amplify';\nimport { color } from 'react-native-reanimated';\n\nvar Registration = function (_React$Component) {\n  _inherits(Registration, _React$Component);\n\n  var _super = _createSuper(Registration);\n\n  function Registration(props) {\n    var _this;\n\n    _classCallCheck(this, Registration);\n\n    _this = _super.call(this, props);\n\n    _this.signUp = function _callee() {\n      var _this$state, username, password, email, given_name, family_name, _this$state2, _username, _password, _given_name, _family_name, _email;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.props.userType == \"civilian\")) {\n                _context.next = 15;\n                break;\n              }\n\n              _this$state = _this.state, username = _this$state.username, password = _this$state.password, email = _this$state.email, given_name = _this$state.given_name, family_name = _this$state.family_name;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Auth.signUp({\n                username: username,\n                password: password,\n                attributes: {\n                  email: email,\n                  given_name: given_name,\n                  family_name: family_name\n                }\n              }));\n\n            case 5:\n              console.log('successful sign up..');\n              console.log(_this.props);\n\n              _this.props.setLoggedIn(true);\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.log('error signing up...', _context.t0);\n\n            case 13:\n              _context.next = 28;\n              break;\n\n            case 15:\n              if (!(_this.props.userType == \"police\")) {\n                _context.next = 28;\n                break;\n              }\n\n              _this$state2 = _this.state, _username = _this$state2.username, _password = _this$state2.password, _given_name = _this$state2.given_name, _family_name = _this$state2.family_name, _email = _this$state2.email;\n              _context.prev = 17;\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(Auth.signUp({\n                username: _username,\n                password: _password,\n                attributes: {\n                  given_name: _given_name,\n                  family_name: _family_name,\n                  email: _email\n                }\n              }));\n\n            case 20:\n              console.log('successful sign up..');\n              console.log(_this.props);\n\n              _this.props.setLoggedIn(true);\n\n              _context.next = 28;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t1 = _context[\"catch\"](17);\n              console.log('error signing up...', _context.t1);\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 10], [17, 25]], Promise);\n    };\n\n    _this.state = {\n      formValid: true,\n      email: '',\n      phone: '',\n      badgeNumber: '',\n      password: '',\n      given_name: '',\n      family_name: '',\n      validFirstName: false,\n      validLastName: false,\n      validBadgeNumber: false,\n      validEmail: false,\n      validPassword: false\n    };\n    _this.state = {\n      user: null,\n      customState: null\n    };\n    _this.handleFirstNameChange = _this.handleFirstNameChange.bind(_assertThisInitialized(_this));\n    _this.handleLastNameChange = _this.handleLastNameChange.bind(_assertThisInitialized(_this));\n    _this.handleEmailChange = _this.handleEmailChange.bind(_assertThisInitialized(_this));\n    _this.handlePhoneChange = _this.handlePhoneChange.bind(_assertThisInitialized(_this));\n    _this.handleBadgeChange = _this.handleBadgeChange.bind(_assertThisInitialized(_this));\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_assertThisInitialized(_this));\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Registration, [{\n    key: \"handleFirstNameChange\",\n    value: function handleFirstNameChange(text) {\n      text.length >= 3 ? this.setState({\n        validFirstName: true\n      }) : this.setState({\n        validFirstName: false\n      });\n      this.setState({\n        given_name: text\n      });\n    }\n  }, {\n    key: \"handleLastNameChange\",\n    value: function handleLastNameChange(text) {\n      text.length >= 3 ? this.setState({\n        validLastName: true\n      }) : this.setState({\n        validLastName: false\n      });\n      this.setState({\n        family_name: text\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(text) {\n      var emailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      this.setState({\n        email: text\n      });\n      this.setState({\n        username: text\n      });\n      text.match(emailformat) ? this.setState({\n        validEmail: true\n      }) : this.setState({\n        validEmail: false\n      });\n    }\n  }, {\n    key: \"handlePhoneChange\",\n    value: function handlePhoneChange(text) {\n      this.setState({\n        phone: text\n      });\n    }\n  }, {\n    key: \"handleBadgeChange\",\n    value: function handleBadgeChange(text) {\n      text.length >= 4 ? this.setState({\n        validBadgeNumber: true\n      }) : this.setState({\n        validBadgeNumber: false\n      });\n      this.setState({\n        email: text + \"@removeme.com\"\n      });\n      this.setState({\n        username: text\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(text) {\n      this.setState({\n        username: text\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(text) {\n      var strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n      this.setState({\n        password: text\n      });\n      text.match(strongRegex) ? this.setState({\n        validPassword: true\n      }) : this.setState({\n        validPassword: false\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          validEmail = _this$state3.validEmail,\n          validFirstName = _this$state3.validFirstName,\n          validLastName = _this$state3.validLastName,\n          validBadgeNumber = _this$state3.validBadgeNumber,\n          validPassword = _this$state3.validPassword;\n      var userType = this.props.userType;\n      var formValid = userType == 'civilian' ? validEmail && validFirstName && validLastName && validPassword : validBadgeNumber && validFirstName && validLastName && validPassword;\n      return React.createElement(KeyboardAvoidingView, {\n        style: [{\n          backgroundColor: colors.background\n        }, baseStyles.wrapper],\n        behavior: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: baseStyles.headerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, \"Join DashChat.\"), React.createElement(InputField, {\n        labelText: \"First Name\",\n        labelTextSize: 14,\n        labelColor: colors.white,\n        textColor: colors.white,\n        borderBottomColor: colors.white,\n        inputType: \"text\",\n        customStyle: {\n          marginBottom: 15\n        },\n        onChangeText: this.handleFirstNameChange,\n        autoFocus: true,\n        autoCapitalize: \"words\",\n        showCheckmark: this.state.validFirstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }), React.createElement(InputField, {\n        labelText: \"Last Name\",\n        labelTextSize: 14,\n        labelColor: colors.white,\n        textColor: colors.white,\n        borderBottomColor: colors.white,\n        inputType: \"text\",\n        customStyle: {\n          marginBottom: 15\n        },\n        onChangeText: this.handleLastNameChange,\n        autoFocus: true,\n        autoCapitalize: \"words\",\n        showCheckmark: this.state.validLastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }), userType == \"civilian\" ? React.createElement(InputField, {\n        labelText: \"Email Address\",\n        labelTextSize: 14,\n        labelColor: colors.white,\n        textColor: colors.white,\n        borderBottomColor: colors.white,\n        inputType: \"email\",\n        showCheckmark: this.state.validEmail,\n        customStyle: {\n          marginBottom: 15\n        },\n        onChangeText: this.handleEmailChange,\n        validEmail: this.state.validEmail,\n        autoFocus: true,\n        autoCapitalize: \"none\",\n        iconName: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }) : React.createElement(InputField, {\n        labelText: \"Badge Number\",\n        labelTextSize: 14,\n        labelColor: colors.white,\n        textColor: colors.white,\n        borderBottomColor: colors.white,\n        inputType: \"email\",\n        customStyle: {\n          marginBottom: 15\n        },\n        onChangeText: this.handleBadgeChange,\n        autoFocus: true,\n        autoCapitalize: \"none\",\n        iconName: \"envelope\",\n        showCheckmark: this.state.validBadgeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }), React.createElement(InputField, {\n        labelText: \"Password\",\n        labelTextSize: 14,\n        labelColor: colors.white,\n        textColor: colors.white,\n        iconPosition: \"left\",\n        borderBottomColor: colors.white,\n        inputType: \"text\",\n        showCheckmark: this.state.validPassword,\n        validPassword: this.state.validPassword,\n        customStyle: {\n          marginBottom: 15\n        },\n        onChangeText: this.handlePasswordChange,\n        autoFocus: true,\n        autoCapitalize: \"words\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.passwordDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      }, \"Password requires special character\"), React.createElement(TouchableOpacity, {\n        style: baseStyles.nextButtonSyle,\n        title: \"Sign Up\",\n        onPress: this.signUp,\n        disabled: !formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: _extends({}, baseStyles.nextButtonText, {\n          color: formValid ? colors.white : colors.secondaryText\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }\n      }, \" Sign Up \"), React.createElement(Icon, {\n        name: \"angle-right\",\n        color: formValid ? colors.white : colors.secondaryText,\n        size: 22,\n        style: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return Registration;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userType: state.userType\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(ActionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","map":{"version":3,"sources":["/Users/bryanmarin/Desktop/Traffic-Stop-App/trafficstop/src/screens/Registration.js"],"names":["React","Component","colors","RoundedButton","getTheme","custom","styles","baseStyles","FontAwesome","Icon","Item","Form","Label","Input","Container","Text","View","StyleProvider","TouchableOpacity","connectStyle","InputField","connect","bindActionCreators","ActionCreators","Auth","color","Registration","props","signUp","userType","state","username","password","email","given_name","family_name","attributes","console","log","setLoggedIn","formValid","phone","badgeNumber","validFirstName","validLastName","validBadgeNumber","validEmail","validPassword","user","customState","handleFirstNameChange","bind","handleLastNameChange","handleEmailChange","handlePhoneChange","handleBadgeChange","handlePasswordChange","handleUsernameChange","text","length","setState","emailformat","match","strongRegex","RegExp","backgroundColor","background","wrapper","headerText","white","marginBottom","passwordDescription","nextButtonSyle","nextButtonText","secondaryText","icon","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, StatusBar, Image, TouchableHighlight, ScrollView, KeyboardAvoidingView } from 'react-native';\nimport colors from '../styles/colors';\nimport RoundedButton from '../common-components/RoundedButton';\nimport getTheme from '../../native-base-theme/components';\nimport custom from '../../native-base-theme/variables/platform';\nimport styles from './styles/Registration';\nimport baseStyles from './styles/AuthenticationBoilerplate';\nimport { FontAwesome as Icon } from '@expo/vector-icons';\nimport { Item, Form, Label, Input, Container, Text, View, StyleProvider } from 'native-base';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { connectStyle } from 'native-base';\nimport InputField from '../common-components/InputField'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as ActionCreators from '../redux/actions';\nimport { Auth } from 'aws-amplify';\nimport { color } from 'react-native-reanimated';\n\n\nclass Registration extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formValid: true,\n      email: '',\n      phone: '',\n      badgeNumber: '',\n      password: '',\n      given_name: '',\n      family_name: '',\n      validFirstName: false,\n      validLastName: false,\n      validBadgeNumber: false,\n      validEmail: false,\n      validPassword: false,\n    };\n\n    this.state = { user: null, customState: null };\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    this.handleBadgeChange = this.handleBadgeChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n  }\n\n  handleFirstNameChange(text) {\n    text.length>=3 ? this.setState({validFirstName: true}) : this.setState({validFirstName: false})\n    this.setState({ given_name: text });\n  }\n  handleLastNameChange(text) {\n    text.length>=3 ? this.setState({validLastName: true}) : this.setState({validLastName: false})\n    this.setState({ family_name: text });\n  }\n  handleEmailChange(text) {\n    var emailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    this.setState({ email: text })\n    this.setState({ username: text })\n    text.match(emailformat) ? this.setState({validEmail: true}): this.setState({validEmail: false});\n  }\n  handlePhoneChange(text) {\n    this.setState({ phone: text });\n  }\n  handleBadgeChange(text) {\n    text.length>=4 ? this.setState({validBadgeNumber: true}) : this.setState({validBadgeNumber: false})\n    this.setState({ email: text + \"@removeme.com\"});\n    this.setState({ username: text });\n    console.log(this.state)\n  }\n  handleUsernameChange(text) {\n    this.setState({ username: text });\n  }\n  handlePasswordChange(text) {\n    var strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n    this.setState({ password: text });\n    text.match(strongRegex) ? this.setState({validPassword: true}): this.setState({validPassword: false});\n    console.log(this.state)\n  }\n\n  signUp = async () => {\n    if (this.props.userType == \"civilian\") {\n      const {\n        username, password, email, given_name, family_name\n      } = this.state\n      try {\n        await Auth.signUp({ username, password, attributes: { email, given_name, family_name }})\n        console.log('successful sign up..')\n        console.log(this.props)\n        this.props.setLoggedIn(true)\n      } catch (err) {\n        console.log('error signing up...', err)\n      }\n    }\n    else if (this.props.userType == \"police\") {\n      const {\n        username, password, given_name, family_name, email\n      } = this.state\n      try {\n        await Auth.signUp({ username, password, attributes: { given_name, family_name, email }})\n        console.log('successful sign up..')\n        console.log(this.props)\n        this.props.setLoggedIn(true)\n      } catch (err) {\n        console.log('error signing up...', err)\n      }\n    }\n  }\n\n  render() {\n    const {validEmail, validFirstName, validLastName, validBadgeNumber, validPassword} = this.state;\n    const userType = this.props.userType;\n    const formValid = userType == 'civilian' \n                      ? (validEmail && validFirstName && validLastName && validPassword)\n                      : (validBadgeNumber && validFirstName && validLastName && validPassword)\n    return (\n      <KeyboardAvoidingView\n        style={[{ backgroundColor: colors.background }, baseStyles.wrapper]}\n        behavior=\"padding\"\n      >\n        <ScrollView>\n          <Text style={baseStyles.headerText}>\n            Join DashChat.\n          </Text>\n          <InputField\n              labelText=\"First Name\"\n              labelTextSize={14}\n              labelColor={colors.white}\n              textColor={colors.white}\n              borderBottomColor={colors.white}\n              inputType=\"text\"\n              customStyle={{ marginBottom: 15 }}\n              onChangeText={this.handleFirstNameChange}\n              autoFocus\n              autoCapitalize={\"words\"}\n              showCheckmark={this.state.validFirstName}\n            />\n            <InputField\n              labelText=\"Last Name\"\n              labelTextSize={14}\n              labelColor={colors.white}\n              textColor={colors.white}\n              borderBottomColor={colors.white}\n              inputType=\"text\"\n              customStyle={{ marginBottom: 15 }}\n              onChangeText={this.handleLastNameChange}\n              autoFocus\n              autoCapitalize={\"words\"}\n              showCheckmark={this.state.validLastName}\n            />\n            {userType == \"civilian\"\n            ?\n              <InputField\n                labelText=\"Email Address\"\n                labelTextSize={14}\n                labelColor={colors.white}\n                textColor={colors.white}\n                borderBottomColor={colors.white}\n                inputType=\"email\"\n                showCheckmark={this.state.validEmail}\n                customStyle={{ marginBottom: 15 }}\n                onChangeText={this.handleEmailChange}\n                validEmail = {this.state.validEmail}\n                autoFocus\n                autoCapitalize={\"none\"}\n                iconName=\"envelope\"\n              />\n            :\n              <InputField\n                labelText=\"Badge Number\"\n                labelTextSize={14}\n                labelColor={colors.white}\n                textColor={colors.white}\n                borderBottomColor={colors.white}\n                inputType=\"email\"\n                customStyle={{ marginBottom: 15 }}\n                onChangeText={this.handleBadgeChange}\n                autoFocus\n                autoCapitalize={\"none\"}\n                iconName=\"envelope\"\n                showCheckmark={this.state.validBadgeNumber}\n              />\n            }\n            <InputField\n              labelText= \"Password\"\n              labelTextSize={14}\n              labelColor={colors.white}\n              textColor={colors.white}\n              iconPosition = \"left\"\n              borderBottomColor={colors.white}\n              inputType=\"text\"\n              showCheckmark={this.state.validPassword}\n              validPassword = {this.state.validPassword}\n              customStyle={{ marginBottom: 15 }}\n              onChangeText={this.handlePasswordChange}\n              autoFocus\n              autoCapitalize={\"words\"}\n            />\n            <Text style = {styles.passwordDescription}>\n              Password requires special character\n            </Text>\n            <TouchableOpacity \n              style = {baseStyles.nextButtonSyle}\n              title = {\"Sign Up\"}\n              onPress = {this.signUp}\n              disabled = {!formValid}\n              >\n              <Text style= {\n                Object.assign({},\n                  baseStyles.nextButtonText, \n                  {color: formValid? colors.white : colors.secondaryText})}\n                > Sign Up </Text>\n              <Icon\n              name=\"angle-right\"\n              color={formValid? colors.white: colors.secondaryText}\n              size={22}\n              style={styles.icon}\n              />\n            </TouchableOpacity>\n            </ScrollView>\n        </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.userType,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(ActionCreators, dispatch);\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\n"]},"metadata":{},"sourceType":"module"}