{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/bryanmarin/Desktop/Traffic-Stop-App/trafficstop/src/common-components/buttons/RoundedButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport colors from \"../../styles/colors\";\n\nvar RoundedButton = function (_Component) {\n  _inherits(RoundedButton, _Component);\n\n  var _super = _createSuper(RoundedButton);\n\n  function RoundedButton() {\n    _classCallCheck(this, RoundedButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RoundedButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          disabled = _this$props.disabled,\n          text = _this$props.text,\n          textColor = _this$props.textColor,\n          background = _this$props.background,\n          icon = _this$props.icon,\n          handleOnPress = _this$props.handleOnPress,\n          textSize = _this$props.textSize,\n          textWeight = _this$props.textWeight,\n          iconPosition = _this$props.iconPosition,\n          textAlign = _this$props.textAlign,\n          borderColor = _this$props.borderColor;\n      var backgroundColor = background || 'transparent';\n      var color = textColor || colors.black;\n      var fontSize = textSize || 16;\n      var fontWeight = textWeight || '600';\n      var alignPosition = textAlign || 'center';\n      var iconLocation = iconPosition || 'left';\n      var border = borderColor || colors.white;\n      var opacityStyle = disabled || loading ? 0.5 : 1;\n      var textOpacity = loading ? 0 : 1;\n      var rippleColor = backgroundColor === 'transparent' ? color : 'rgba(0,0,0,0.4)';\n\n      var ButtonComponent = function ButtonComponent(buttonProps) {\n        if (Platform.OS === 'ios') {\n          return React.createElement(TouchableOpacity, {\n            style: [{\n              opacity: opacityStyle,\n              backgroundColor: backgroundColor,\n              borderColor: border\n            }, styles.iosWrapper],\n            onPress: handleOnPress,\n            activeOpacity: 0.6,\n            disabled: disabled || loading,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }\n          }, buttonProps.children);\n        }\n\n        return React.createElement(View, {\n          style: [styles.androidWrapper, {\n            borderColor: border\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableNativeFeedback, {\n          useForeground: true,\n          onPress: handleOnPress,\n          disabled: disabled || loading,\n          background: TouchableNativeFeedback.Ripple(rippleColor, false),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: [{\n            opacity: opacityStyle,\n            backgroundColor: backgroundColor\n          }, styles.androidButtonText],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, buttonProps.children)));\n      };\n\n      return React.createElement(ButtonComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.buttonTextWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, iconLocation === 'left' && !loading ? icon : null, loading ? React.createElement(View, {\n        style: styles.loaderContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }) : null, React.createElement(Text, {\n        style: [{\n          opacity: textOpacity,\n          color: color,\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          textAlign: alignPosition\n        }, styles.buttonText],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, text), iconLocation === 'right' && !loading ? icon : null));\n    }\n  }]);\n\n  return RoundedButton;\n}(Component);\n\nexport { RoundedButton as default };\nRoundedButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  textColor: PropTypes.string,\n  textSize: PropTypes.string,\n  textWeight: PropTypes.string,\n  textAlign: PropTypes.string,\n  background: PropTypes.string,\n  borderColor: PropTypes.string,\n  icon: PropTypes.object,\n  iconPosition: PropTypes.string,\n  handleOnPress: PropTypes.func,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool\n};\nvar styles = StyleSheet.create({\n  iosWrapper: {\n    display: 'flex',\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 12,\n    paddingBottom: 12,\n    borderRadius: 40,\n    borderWidth: 1,\n    marginBottom: 10,\n    alignItems: 'center'\n  },\n  androidWrapper: {\n    overflow: 'hidden',\n    borderRadius: 40,\n    borderWidth: 1,\n    marginBottom: 10\n  },\n  androidButtonText: {\n    display: 'flex',\n    paddingLeft: 20,\n    paddingRight: 20,\n    padding: 12,\n    paddingBottom: 12,\n    alignItems: 'center'\n  },\n  buttonTextWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    width: '100%'\n  },\n  loaderContainer: {\n    width: 90,\n    height: 90,\n    borderRadius: 15,\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    marginLeft: -45,\n    marginTop: -45\n  },\n  loaderImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 15,\n    position: 'absolute',\n    left: '50%',\n    marginLeft: -20,\n    top: '50%',\n    marginTop: -20\n  }\n});","map":{"version":3,"sources":["/Users/bryanmarin/Desktop/Traffic-Stop-App/trafficstop/src/common-components/buttons/RoundedButton.js"],"names":["React","Component","PropTypes","colors","RoundedButton","props","loading","disabled","text","textColor","background","icon","handleOnPress","textSize","textWeight","iconPosition","textAlign","borderColor","backgroundColor","color","black","fontSize","fontWeight","alignPosition","iconLocation","border","white","opacityStyle","textOpacity","rippleColor","ButtonComponent","buttonProps","Platform","OS","opacity","styles","iosWrapper","children","androidWrapper","TouchableNativeFeedback","Ripple","androidButtonText","buttonTextWrapper","loaderContainer","buttonText","propTypes","string","isRequired","object","func","bool","StyleSheet","create","display","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","borderWidth","marginBottom","alignItems","overflow","padding","flexDirection","justifyContent","width","height","position","left","top","marginLeft","marginTop","loaderImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  Platform,\n  StyleSheet,\n} from 'react-native';\nimport colors from '../../styles/colors';\n\nexport default class RoundedButton extends Component {\n  render() {\n  \tconst {\n      loading,\n      disabled,\n      text,\n      textColor,\n      background,\n      icon,\n      handleOnPress,\n      textSize,\n      textWeight,\n      iconPosition,\n      textAlign,\n      borderColor,\n    } = this.props;\n  \tconst backgroundColor = background || 'transparent';\n  \tconst color = textColor || colors.black;\n    const fontSize = textSize || 16;\n    const fontWeight = textWeight || '600';\n    const alignPosition = textAlign || 'center';\n    const iconLocation = iconPosition || 'left';\n    const border = borderColor || colors.white;\n    const opacityStyle = disabled || loading ? 0.5 : 1;\n    const textOpacity = loading ? 0 : 1;\n    const rippleColor = backgroundColor === 'transparent' ? color : 'rgba(0,0,0,0.4)';\n\n    const ButtonComponent = (buttonProps) => {\n      if (Platform.OS === 'ios') {\n        return (\n          <TouchableOpacity\n            style={[{ opacity: opacityStyle, backgroundColor, borderColor: border }, styles.iosWrapper]}\n            onPress={handleOnPress}\n            activeOpacity={0.6}\n            disabled={disabled || loading}\n          >\n            {buttonProps.children}\n          </TouchableOpacity>\n        );\n      }\n      return (\n        <View style={[styles.androidWrapper, {borderColor: border}]}>\n          <TouchableNativeFeedback\n            useForeground={true}\n            onPress={handleOnPress}\n            disabled={disabled || loading}\n            background={TouchableNativeFeedback.Ripple(rippleColor, false)}\n          >\n            <View style={[{opacity: opacityStyle, backgroundColor }, styles.androidButtonText]}>\n              {buttonProps.children}\n            </View>\n          </TouchableNativeFeedback>\n        </View>\n      );\n    };\n\n    return (\n      <ButtonComponent>\n        <View style={styles.buttonTextWrapper}>\n          {iconLocation === 'left' && !loading ? icon : null}\n          {loading\n            ? (\n              <View style={styles.loaderContainer}>\n                {/* <Image\n                  style={styles.loaderImage}\n                  //source={require('../../img/whiteLoader.gif')}\n                /> */}\n              </View>\n            )\n            : null }\n          <Text style={[{\n            opacity: textOpacity, color, fontSize, fontWeight, textAlign: alignPosition,\n          }, styles.buttonText]}\n          >\n            {text}\n          </Text>\n          {iconLocation === 'right' && !loading ? icon : null}\n        </View>\n      </ButtonComponent>\n    );\n  }\n}\n\nRoundedButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  textColor: PropTypes.string,\n  textSize: PropTypes.string,\n  textWeight: PropTypes.string,\n  textAlign: PropTypes.string,\n  background: PropTypes.string,\n  borderColor: PropTypes.string,\n  icon: PropTypes.object,\n  iconPosition: PropTypes.string,\n  handleOnPress: PropTypes.func,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nconst styles = StyleSheet.create({\n  iosWrapper: {\n    display: 'flex',\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 12,\n    paddingBottom: 12,\n    borderRadius: 40,\n    borderWidth: 1,\n    marginBottom: 10,\n    alignItems: 'center',\n  },\n  androidWrapper: {\n    overflow: 'hidden',\n    borderRadius: 40,\n    borderWidth: 1,\n    marginBottom: 10,\n  },\n  androidButtonText: {\n    display: 'flex',\n    paddingLeft: 20,\n    paddingRight: 20,\n    padding: 12,\n    paddingBottom: 12,\n    alignItems: 'center',\n  },\n  buttonTextWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  buttonText: {\n  \twidth: '100%',\n  },\n  loaderContainer: {\n    width: 90,\n    height: 90,\n    borderRadius: 15,\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    marginLeft: -45,\n    marginTop: -45,\n  },\n  loaderImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 15,\n    position: 'absolute',\n    left: '50%',\n    marginLeft: -20,\n    top: '50%',\n    marginTop: -20,\n  },\n});"]},"metadata":{},"sourceType":"module"}